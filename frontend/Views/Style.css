@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap');



body {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background-color: #f0efeb;
    overflow: hidden;
    container-type: inline-size;
    margin:0%;
    height: 100dvh;
  
}



.headingtile,.htptile {
    align-items: center;
    border-radius: 0.5em;
    background-color: white;
    box-shadow: rgba(45, 35, 66, 0.4) 0 0.125em 0.25em, rgba(45, 35, 66, 0.3) 0 0.4375em 0.8125em -0.1875em, #D6D6E7 0 -0.1875em 0 inset;
    color: #36395A;
    display:flex;
    font-family: "inter";
    justify-content: center;
    overflow: hidden;
    padding-left: 1em;
    padding-right: 1em;
    transition: box-shadow .15s, transform .15s;
    font-weight: bold;
    height: 3em;
    width: 1em;
}

.headingtile{
  font-size: 2em;
}
.htptile{
  font-size: 1em;

}

.headingtile:hover {
    box-shadow: rgba(45, 35, 66, 0.4) 0 4 8, rgba(45, 35, 66, 0.3) 0 7 13 -3, #D6D6E7 0 -3 0 inset;
    transform: translateY(-0.5em);
}

.welcome,
.home {
    display: flex;
    flex-direction: row;
    gap: 0.5em;
}

.welcome {
    margin: 3% auto;
}

.home {
    margin: 1%auto;
}


.title {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 2vh;
    margin-top:30%;

}

.green {
    background-color: #07c04257;
}

.yellow {
    background-color: #daa731a7;
}

.red {
    background-color: #ba084c80;
}

.button,
.home-button {
  background-color: #ad977f74;
  color: black;
  border: none;
  font-size: 1.5em;
  border-radius: 0.5em;
  cursor: pointer;
  transition: all 0.3s ease;
  margin-top: 5%;
  align-items: center;
  justify-content: center;
  padding: 1em 2em;
}
.home-button{
  margin:0%
}

.button:hover {
  background-color: #ad977f;
  transform: scale(1.05);
}

.close-button{
  margin-top: 5em;
   padding:0.5em;
} 


.button:active {
    box-shadow: #D6D6E7 0 3 7 inset;
    transform: translateY(0.5em);
}

.spirdle img {
    width: 100%;
    aspect-ratio: 1/1;
    object-fit: fill;
    display: block;
}

.spirdle {
    display: flex;
    width: 50%;
    opacity: 20%;
    z-index: -2;
}

.right {
  margin-left: 100%;
  margin-bottom: -40%;
}
#right-home{
  margin-left: 100%;
  margin-top: -50%;
}

.left {
    margin-right: 90%;
    margin-top: -20%;
}

#dialog {
    padding: 3em;
    max-width: 75%;
    max-height: 60dvh;
    border: 0;
    box-shadow: 0 0 1em rgb(0 0 0 / .3);
    border-radius:2em;
    text-align:center;
    background-color:white;
    border-color:#f0efeb;
    font-family: 'inter', sans-serif;
    font-size: 1em;
    color: black;
    align-items: center;
    justify-content: center;
    flex-direction: column; 
    line-height: 1.5;
    
  
    & > * {
      margin: 0 0 0.5rem 0;
    }
  }
  .modal::backdrop {
    background: rgb(72,79,131 / 0.4);
  }
  
  
  .order {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1em;
  }
  .How, .To, .play {
    display: flex;
    flex-direction: row;
    align-items: center; /* Center vertically */
 
  }
  
  
  
  
  /*   Open state of the dialog  */
  dialog[open] {
    opacity: 1;
    transform: scaleY(1);
  }
  
  /*   Closed state of the dialog   */
  dialog {
    opacity: 0;
    transform: scaleY(0);
    transition:
      opacity 0.7s ease-out,
      transform 0.7s ease-out,
      overlay 0.7s ease-out allow-discrete,
      display 0.7s ease-out allow-discrete;
    /* Equivalent to
    transition: all 0.7s allow-discrete; */
  }
  
  /*   Before-open state  */
  /* Needs to be after the previous dialog[open] rule to take effect,
      as the specificity is the same */
  @starting-style {
    dialog[open] {
      opacity: 0;
      transform: scaleY(0);
    }
  }
  
  /* Transition the :backdrop when the dialog modal is promoted to the top layer */
  dialog::backdrop {
    background-color: rgb(0 0 0 / 0%);
    transition:
      display 0.7s allow-discrete,
      overlay 0.7s allow-discrete,
      background-color 0.7s;
    /* Equivalent to
    transition: all 0.7s allow-discrete; */
  }
  
  dialog[open]::backdrop {
    background-color: rgb(0 0 0 / 25%);
  }
  
  /* This starting-style rule cannot be nested inside the above selector
  because the nesting selector cannot represent pseudo-elements. */
  
  @starting-style {
    dialog[open]::backdrop {
      background-color: rgb(0 0 0 / 0%);
    }
  }

  @container (max-width: 700px) {
    .headingtile{
      font-size: 1em;
      padding-left: 0.5em;
    padding-right: 0.5em;
    }
    .button,
.home-button {
  background-color: #ad977f74;
  color: black;
  border: none;
  font-size: 1em;
  border-radius: 0.5em;
  cursor: pointer;
  transition: all 0.3s ease;
  margin-top: 5%;
  align-items: center;
  justify-content: center;
  padding: 0.5em 1em;
}


  }
  

